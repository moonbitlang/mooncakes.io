{
  "readme": "# gmlewis/base64\n[![check](https://github.com/gmlewis/moonbit-base64/actions/workflows/check.yml/badge.svg)](https://github.com/gmlewis/moonbit-base64/actions/workflows/check.yml)\n\nThis is a simple base64 encoder based on Go's implementation:\nhttps://cs.opensource.google/go/go/+/master:src/encoding/base64/base64.go\nwhich has the copyright notice:\n\n```\n// Copyright 2009 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n```\n\nThe UTF-16 / UTF-8 encoder/decoders are provided with permission by\n@peter-jerry-ye from this repo: https://github.com/peter-jerry-ye/jstream\n\n## Status\n\nThe code has been updated to support compiler:\n\n```bash\n$ moon version --all\nmoon 0.1.20241216 (b57ed1c 2024-12-16) ~/.moon/bin/moon\nmoonc v0.1.20241216+68e710374 ~/.moon/bin/moonc\nmoonrun 0.1.20241216 (b57ed1c 2024-12-16) ~/.moon/bin/moonrun\n```\n\nUse `moonup` to manage `moon` compiler versions:\nhttps://github.com/chawyehsu/moonup\n",
  "name": "gmlewis/base64",
  "traits": [],
  "types": [
    {
      "name": "CorruptInputError",
      "docstring": " This package is based on the Go implementation found here:\n https://cs.opensource.google/go/go/+/master:src/encoding/base64/base64.go\n which has the copyright notice:\n Copyright 2009 The Go Authors. All rights reserved.\n Use of this source code is governed by a BSD-style\n license that can be found in the LICENSE file.",
      "signature": "pub(all) type! CorruptInputError String\n",
      "loc": { "line": 7, "column": 16 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"gmlewis/base64#CorruptInputError\">CorruptInputError</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"gmlewis/base64#CorruptInputError\">CorruptInputError</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 7, "column": 48 }
            }
          ],
          "loc": { "line": 7, "column": 48 }
        }
      ]
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "bytes2str",
      "docstring": " `bytes2str` decodes a UTF-8 `Bytes` to a UTF-16 `String`.",
      "signature": "fn bytes2str(b : Bytes) -> String",
      "loc": { "line": 2, "column": 8 }
    },
    {
      "name": "std_decode2bytes",
      "docstring": " `std_decode2bytes` base64-decodes the provided bytes using Standard encoding.\n Setting `no_padding=true` is used for raw decoding.",
      "signature": "fn std_decode2bytes(src : String, no_padding~ : Bool = ..) -> Bytes!<a href=\"gmlewis/base64#CorruptInputError\">CorruptInputError</a>",
      "loc": { "line": 11, "column": 8 }
    },
    {
      "name": "std_decode2str",
      "docstring": " `std_decode2str` base64-decodes the provided bytes using Standard encoding and returns a String.\n Setting `no_padding=true` is used for raw decoding.",
      "signature": "fn std_decode2str(src : String, no_padding~ : Bool = ..) -> String!<a href=\"gmlewis/base64#CorruptInputError\">CorruptInputError</a>",
      "loc": { "line": 26, "column": 8 }
    },
    {
      "name": "std_encode2bytes",
      "docstring": " `std_encode2bytes` base64-encodes the provided bytes using Standard encoding.\n Setting `no_padding=true` is used for raw encoding.",
      "signature": "fn std_encode2bytes(src : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte], no_padding~ : Bool = ..) -> Bytes",
      "loc": { "line": 10, "column": 8 }
    },
    {
      "name": "std_encode2str",
      "docstring": " `std_encode2str` base64-encodes the provided bytes using Standard encoding and returns a String.\n Setting `no_padding=true` is used for raw encoding.",
      "signature": "fn std_encode2str(src : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte], no_padding~ : Bool = ..) -> String",
      "loc": { "line": 24, "column": 8 }
    },
    {
      "name": "str2bytes",
      "docstring": " `str2bytes` encodes a UTF-16 `String` as a UTF-8 `Bytes`.",
      "signature": "fn str2bytes(s : String) -> Bytes",
      "loc": { "line": 2, "column": 8 }
    },
    {
      "name": "url_decode2bytes",
      "docstring": " `url_decode2bytes` base64-decodes the provided bytes using URL encoding.\n Setting `no_padding=true` is used for raw decoding.",
      "signature": "fn url_decode2bytes(src : String, no_padding~ : Bool = ..) -> Bytes!<a href=\"gmlewis/base64#CorruptInputError\">CorruptInputError</a>",
      "loc": { "line": 35, "column": 8 }
    },
    {
      "name": "url_decode2str",
      "docstring": " `url_decode2str` base64-decodes the provided bytes using URL encoding and returns a String.\n Setting `no_padding=true` is used for raw decoding.",
      "signature": "fn url_decode2str(src : String, no_padding~ : Bool = ..) -> String!<a href=\"gmlewis/base64#CorruptInputError\">CorruptInputError</a>",
      "loc": { "line": 50, "column": 8 }
    },
    {
      "name": "url_encode2bytes",
      "docstring": " `url_encode2bytes` base64-encodes the provided bytes using URL encoding.\n Setting `no_padding=true` is used for raw encoding.",
      "signature": "fn url_encode2bytes(src : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte], no_padding~ : Bool = ..) -> Bytes",
      "loc": { "line": 33, "column": 8 }
    },
    {
      "name": "url_encode2str",
      "docstring": " `url_encode2str` base64-encodes the provided bytes using URL encoding and returns a String.\n Setting `no_padding=true` is used for raw encoding.",
      "signature": "fn url_encode2str(src : <a href=\"moonbitlang/core/array#FixedArray\">FixedArray</a>[Byte], no_padding~ : Bool = ..) -> String",
      "loc": { "line": 47, "column": 8 }
    }
  ],
  "misc": []
}