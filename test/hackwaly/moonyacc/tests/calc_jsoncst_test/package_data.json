{
  "readme": "",
  "name": "hackwaly/moonyacc/tests/calc_jsoncst_test",
  "traits": [],
  "types": [
    {
      "name": "ParseError",
      "docstring": "",
      "signature": "pub(all) enum ParseError {\n  UnexpectedToken(<a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#Token\">Token</a>, (Int, Int), <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#TokenKind\">TokenKind</a>])\n}",
      "loc": { "line": 55, "column": 16 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#ParseError\">ParseError</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#ParseError\">ParseError</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 57, "column": 10 }
            }
          ],
          "loc": { "line": 57, "column": 10 }
        }
      ]
    },
    {
      "name": "Token",
      "docstring": "",
      "signature": "pub(all) enum Token {\n  EOF\n  NUMBER\n  PLUS\n  MINUS\n  STAR\n  LPAREN\n  RPAREN\n}",
      "loc": { "line": 5, "column": 15 },
      "methods": [
        {
          "name": "kind",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#Token\">Token</a>::kind(self : <a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#Token\">Token</a>) -> <a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#TokenKind\">TokenKind</a>",
          "loc": { "line": 16, "column": 15 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#Token\">Token</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#Token\">Token</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 13, "column": 10 }
            }
          ],
          "loc": { "line": 13, "column": 10 }
        }
      ]
    },
    {
      "name": "TokenKind",
      "docstring": "",
      "signature": "pub(all) enum TokenKind {\n  TK_EOF\n  TK_NUMBER\n  TK_PLUS\n  TK_MINUS\n  TK_STAR\n  TK_LPAREN\n  TK_RPAREN\n}",
      "loc": { "line": 29, "column": 15 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#TokenKind\">TokenKind</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#TokenKind\">TokenKind</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 40, "column": 34 }
            }
          ],
          "loc": { "line": 40, "column": 1 }
        }
      ]
    },
    {
      "name": "YYDecision",
      "docstring": "",
      "signature": "type YYDecision",
      "loc": { "line": 72, "column": 6 },
      "methods": [],
      "impls": []
    },
    {
      "name": "YYObj_Json",
      "docstring": "",
      "signature": "type YYObj_Json",
      "loc": { "line": 63, "column": 7 },
      "methods": [],
      "impls": []
    },
    {
      "name": "YYSymbol",
      "docstring": "",
      "signature": "type YYSymbol",
      "loc": { "line": 81, "column": 6 },
      "methods": [],
      "impls": []
    }
  ],
  "typealias": [
    {
      "name": "Position",
      "docstring": "",
      "signature": "type Position = Int",
      "loc": { "line": 2, "column": 1 }
    }
  ],
  "values": [
    {
      "name": "start",
      "docstring": "",
      "signature": "fn start(read_token : () -> (<a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#Token\">Token</a>, Int, Int), start_pos : Int) -> <a href=\"moonbitlang/core/json#Json\">Json</a>!<a href=\"hackwaly/moonyacc/tests/calc_jsoncst_test#ParseError\">ParseError</a>",
      "loc": { "line": 682, "column": 8 }
    }
  ],
  "misc": []
}