{
  "readme": "",
  "name": "FlyCloudC/miniKanren",
  "traits": [],
  "types": [
    {
      "name": "Goal",
      "docstring": "",
      "signature": "type Goal",
      "loc": { "line": 2, "column": 6 },
      "methods": [
        {
          "name": "land",
          "docstring": "",
          "signature": "fn <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>::land(g1 : <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>, g2 : <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
          "loc": { "line": 22, "column": 14 }
        },
        {
          "name": "lor",
          "docstring": "",
          "signature": "fn <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>::lor(g1 : <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>, g2 : <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
          "loc": { "line": 17, "column": 14 }
        }
      ],
      "impls": []
    },
    {
      "name": "Stream",
      "docstring": "",
      "signature": "type Stream",
      "loc": { "line": 2, "column": 6 },
      "methods": [],
      "impls": []
    },
    {
      "name": "Sub",
      "docstring": " A Substitution cannot contain two or more associations with the same car.",
      "signature": "type Sub",
      "loc": { "line": 2, "column": 6 },
      "methods": [],
      "impls": []
    },
    {
      "name": "Val",
      "docstring": "",
      "signature": "pub(all) enum Val {\n  Int(Int)\n  Nil\n  Pair(<a href=\"FlyCloudC/miniKanren#Val\">Val</a>, <a href=\"FlyCloudC/miniKanren#Val\">Val</a>)\n  Var(<a href=\"FlyCloudC/miniKanren#VarId\">VarId</a>)\n}",
      "loc": { "line": 5, "column": 15 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"FlyCloudC/miniKanren#Val\">Val</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"FlyCloudC/miniKanren#Val\">Val</a>, <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> Bool",
              "loc": { "line": 10, "column": 10 }
            }
          ],
          "loc": { "line": 10, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"FlyCloudC/miniKanren#Val\">Val</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 57, "column": 28 }
            }
          ],
          "loc": { "line": 57, "column": 1 }
        }
      ]
    },
    {
      "name": "VarId",
      "docstring": "",
      "signature": "type VarId",
      "loc": { "line": 2, "column": 6 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"FlyCloudC/miniKanren#VarId\">VarId</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"FlyCloudC/miniKanren#VarId\">VarId</a>, <a href=\"FlyCloudC/miniKanren#VarId\">VarId</a>) -> Bool",
              "loc": { "line": 2, "column": 23 }
            }
          ],
          "loc": { "line": 2, "column": 23 }
        }
      ]
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "appendo",
      "docstring": "",
      "signature": "fn appendo(l1 : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, l2 : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, o : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 83, "column": 8 }
    },
    {
      "name": "caro",
      "docstring": "",
      "signature": "fn caro(p : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, a : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 12, "column": 8 }
    },
    {
      "name": "cdro",
      "docstring": "",
      "signature": "fn cdro(p : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, d : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 17, "column": 8 }
    },
    {
      "name": "conso",
      "docstring": "",
      "signature": "fn conso(a : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, d : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, p : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 7, "column": 8 }
    },
    {
      "name": "delay",
      "docstring": "",
      "signature": "fn delay(f : () -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 27, "column": 8 }
    },
    {
      "name": "eqo",
      "docstring": "",
      "signature": "fn eqo(u : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, v : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 5, "column": 8 }
    },
    {
      "name": "fresh_var",
      "docstring": "",
      "signature": "fn fresh_var() -> <a href=\"FlyCloudC/miniKanren#Val\">Val</a>",
      "loc": { "line": 27, "column": 9 }
    },
    {
      "name": "fresh_var_2",
      "docstring": "",
      "signature": "fn fresh_var_2() -> (<a href=\"FlyCloudC/miniKanren#Val\">Val</a>, <a href=\"FlyCloudC/miniKanren#Val\">Val</a>)",
      "loc": { "line": 30, "column": 8 }
    },
    {
      "name": "fresh_var_3",
      "docstring": "",
      "signature": "fn fresh_var_3() -> (<a href=\"FlyCloudC/miniKanren#Val\">Val</a>, <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, <a href=\"FlyCloudC/miniKanren#Val\">Val</a>)",
      "loc": { "line": 35, "column": 8 }
    },
    {
      "name": "list",
      "docstring": "",
      "signature": "fn list(vs : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"FlyCloudC/miniKanren#Val\">Val</a>]) -> <a href=\"FlyCloudC/miniKanren#Val\">Val</a>",
      "loc": { "line": 13, "column": 8 }
    },
    {
      "name": "listo",
      "docstring": "",
      "signature": "fn listo(v : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 22, "column": 8 }
    },
    {
      "name": "membero",
      "docstring": "",
      "signature": "fn membero(e : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>, ls : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 45, "column": 8 }
    },
    {
      "name": "nilo",
      "docstring": "",
      "signature": "fn nilo(v : <a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>",
      "loc": { "line": 2, "column": 8 }
    },
    {
      "name": "run",
      "docstring": "",
      "signature": "fn run(f : (<a href=\"FlyCloudC/miniKanren#Val\">Val</a>) -> <a href=\"FlyCloudC/miniKanren#Goal\">Goal</a>) -> <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[<a href=\"FlyCloudC/miniKanren#Val\">Val</a>]",
      "loc": { "line": 32, "column": 8 }
    }
  ],
  "misc": []
}