{
  "readme": "# ArgParser\n\nCommand line parser for MoonBit. It use a declarative style to specify command line interface.\n\n# Usage \n\n```moonbit\nfn main {\n  let argv = [\"-o\", \"out.mbt\", \"file1\", \"file2\", \"--verbose\"]\n  let verbose = @ref.ref(false)\n  let output = @ref.ref(\"output\")\n  let files = @vec.new()\n  let usage =\n    #| Awesome CLI tool!\n    #| usage: \n    #|      mytool [options] <file1> [<file2>] ... -o <output>\n    #|\n\n  parse(\n    [\n      (\"--verbose\", \"-v\", Set(verbose), \"enable verbose message\"),\n      (\"--output\", \"-o\", Set_string(output), \"output file name\"),\n    ],\n    fn { file => files.push(file) },\n    usage,\n    argv,\n  )\n  println(verbose)\n  println(output)\n  println(files[0]) \n  println(files[1]) \n}\n```\n\noutput: \n\n```\n{val: true}\n{val: out.mbt}\nfile1\nfile2\n```\n\n## `help` options\n\nArgParser will automatically generate `--help` and `-h` options.\n\n```moonbit\nfn main {\n  let argv = [\"--help\"]\n  let usage =\n    #| Awesome CLI tool!\n    #| usage: \n    #|      mytool [options] <file1> [<file2>] ... -o <output>\n    #|\n\n  parse(\n    [\n      (\"--verbose\", \"-v\", Set(verbose), \"enable verbose message\"),\n      (\"--output\", \"-o\", Set_string(output), \"output file name\"),\n    ],\n    ignore,\n    usage,\n    argv,\n  )\n}\n```\n\noutput: \n\n```bash\nAwesome CLI tool!\nusage: \n    mytool [options] \\<file1\\> [<file2>] ... -o \\<output\\>\noptions:\n  --verbose     -v      enable verbose message\n  --output      -o      output file name\n```\n\n\n\n\n\n\n\n\n",
  "name": "Yoorkin/ArgParser",
  "traits": [],
  "types": [
    {
      "name": "Spec",
      "docstring": "",
      "signature": "pub(all) enum Spec {\n  Unit(() -> Unit)\n  String((String) -> Unit)\n  Set_string(<a href=\"moonbitlang/core/ref#Ref\">Ref</a>[String])\n  Set(<a href=\"moonbitlang/core/ref#Ref\">Ref</a>[Bool])\n  Clear(<a href=\"moonbitlang/core/ref#Ref\">Ref</a>[Bool])\n}",
      "loc": { "line": 1, "column": 15 },
      "methods": [],
      "impls": []
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "parse",
      "docstring": "",
      "signature": "fn parse(speclist : <a href=\"moonbitlang/core/array#Array\">Array</a>[(String, String, <a href=\"Yoorkin/ArgParser#Spec\">Spec</a>, String)], rest : (String) -> Unit, usage_msg : String, argv : <a href=\"moonbitlang/core/array#Array\">Array</a>[String]) -> Unit",
      "loc": { "line": 51, "column": 8 }
    }
  ],
  "misc": []
}