{
  "readme": "",
  "name": "kesmeey/fmt/lib",
  "traits": [],
  "types": [
    {
      "name": "Args_Type",
      "docstring": "",
      "signature": "pub(all) enum Args_Type {\n  String(String)\n  Int(Int)\n  UInt(UInt)\n  Double(Double)\n}",
      "loc": { "line": 39, "column": 15 },
      "methods": [],
      "impls": []
    },
    {
      "name": "FMT_Type",
      "docstring": "",
      "signature": "pub(all) enum FMT_Type {\n  Text(String)\n  Int(Int, Bool, Bool, Bool)\n  Double(Int, Int, Bool, Bool, Bool, Bool)\n  String(Int, Bool)\n  HexLower(Int, Bool, Bool)\n  HexUpper(Int, Bool, Bool)\n  Octal(Int, Bool, Bool)\n  Scientific(Int, Int, Bool, Bool)\n  General(Int, Int, Bool, Bool)\n  Unsigned(Int, Bool, Bool)\n}",
      "loc": { "line": 8, "column": 15 },
      "methods": [],
      "impls": []
    },
    {
      "name": "Formatter",
      "docstring": "",
      "signature": "pub(all) struct Formatter {\n  types : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"kesmeey/fmt/lib#FMT_Type\">FMT_Type</a>]\n}",
      "loc": { "line": 3, "column": 17 },
      "methods": [
        {
          "name": "fmt",
          "docstring": "",
          "signature": "fn <a href=\"kesmeey/fmt/lib#Formatter\">Formatter</a>::fmt(self : <a href=\"kesmeey/fmt/lib#Formatter\">Formatter</a>, args : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"kesmeey/fmt/lib#Args_Type\">Args_Type</a>]) -> String",
          "loc": { "line": 305, "column": 19 }
        },
        {
          "name": "new",
          "docstring": "",
          "signature": "fn <a href=\"kesmeey/fmt/lib#Formatter\">Formatter</a>::new(fmt : String) -> <a href=\"kesmeey/fmt/lib#Formatter\">Formatter</a>",
          "loc": { "line": 165, "column": 19 }
        }
      ],
      "impls": []
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "format_decimal",
      "docstring": "",
      "signature": "fn format_decimal(num : Double, precision : Int, mode : Bool) -> String",
      "loc": { "line": 137, "column": 8 }
    },
    {
      "name": "max",
      "docstring": "",
      "signature": "fn max(a : Int, b : Int) -> Int",
      "loc": { "line": 58, "column": 8 }
    },
    {
      "name": "to_base",
      "docstring": "",
      "signature": "fn to_base(val : Int, base : Int, uppercase : Bool) -> String",
      "loc": { "line": 95, "column": 8 }
    }
  ],
  "misc": []
}