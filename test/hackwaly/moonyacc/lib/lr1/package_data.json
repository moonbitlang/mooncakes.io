{
  "readme": "",
  "name": "hackwaly/moonyacc/lib/lr1",
  "traits": [
    {
      "name": "@hackwaly/moonyacc/lib/lr1.AbstractLookaheadSet",
      "docstring": "",
      "signature": "trait @hackwaly/moonyacc/lib/lr1.AbstractLookaheadSet",
      "loc": { "line": 2, "column": 1 },
      "default_impls": [],
      "impls": []
    }
  ],
  "types": [
    {
      "name": "Automaton",
      "docstring": "",
      "signature": "pub(all) struct Automaton {\n  states : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>]\n  starts : <a href=\"moonbitlang/core/array#Array\">Array</a>[(<a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>)]\n  conflicts : <a href=\"hackwaly/moonyacc/lib/util/hashmap2#T\">@hackwaly/moonyacc/lib/util/hashmap2.T</a>[<a href=\"hackwaly/moonyacc/lib/lr1#ConflictLocation\">ConflictLocation</a>, <a href=\"moonbitlang/core/immut/list#T\">@moonbitlang/core/immut/list.T</a>[<a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>]]\n}",
      "loc": { "line": 115, "column": 17 },
      "methods": [
        {
          "name": "build",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#Automaton\">Automaton</a>::build(grammar : <a href=\"hackwaly/moonyacc/lib/grm#Grammar\">@hackwaly/moonyacc/lib/grm.Grammar</a>) -> <a href=\"hackwaly/moonyacc/lib/lr1#Automaton\">Automaton</a>",
          "loc": { "line": 124, "column": 19 }
        }
      ],
      "impls": []
    },
    {
      "name": "ConflictLocation",
      "docstring": "",
      "signature": "pub(all) struct ConflictLocation {\n  state : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>\n  input : <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>\n}",
      "loc": { "line": 109, "column": 17 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#ConflictLocation\">ConflictLocation</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"hackwaly/moonyacc/lib/lr1#ConflictLocation\">ConflictLocation</a>, <a href=\"hackwaly/moonyacc/lib/lr1#ConflictLocation\">ConflictLocation</a>) -> Bool",
              "loc": { "line": 112, "column": 10 }
            }
          ],
          "loc": { "line": 112, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Hash\">Hash</a> for <a href=\"hackwaly/moonyacc/lib/lr1#ConflictLocation\">ConflictLocation</a>",
          "methods": [
            {
              "name": "hash_combine",
              "docstring": "automatically derived",
              "signature": "fn hash_combine(<a href=\"hackwaly/moonyacc/lib/lr1#ConflictLocation\">ConflictLocation</a>, <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": { "line": 112, "column": 14 }
            }
          ],
          "loc": { "line": 112, "column": 14 }
        }
      ]
    },
    {
      "name": "Decision",
      "docstring": "",
      "signature": "pub(all) enum Decision {\n  Shift(<a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>)\n  Reduce(<a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>)\n  Accept\n  Conflict(<a href=\"moonbitlang/core/immut/list#T\">@moonbitlang/core/immut/list.T</a>[<a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>])\n}",
      "loc": { "line": 26, "column": 15 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>, <a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>) -> Bool",
              "loc": { "line": 32, "column": 10 }
            }
          ],
          "loc": { "line": 32, "column": 10 }
        }
      ]
    },
    {
      "name": "EncodedLR0Item",
      "docstring": "",
      "signature": "pub(all) type EncodedLR0Item Int",
      "loc": { "line": 2, "column": 15 },
      "methods": [
        {
          "name": "decode",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>::decode(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, grammar : <a href=\"hackwaly/moonyacc/lib/grm#Grammar\">@hackwaly/moonyacc/lib/grm.Grammar</a>) -> <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>",
          "loc": { "line": 13, "column": 24 }
        },
        {
          "name": "decode_postdot",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>::decode_postdot(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, grammar : <a href=\"hackwaly/moonyacc/lib/grm#Grammar\">@hackwaly/moonyacc/lib/grm.Grammar</a>) -> <a href=\"hackwaly/moonyacc/lib/grm#Symbol\">@hackwaly/moonyacc/lib/grm.Symbol</a>?",
          "loc": { "line": 31, "column": 24 }
        },
        {
          "name": "decode_production",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>::decode_production(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, grammar : <a href=\"hackwaly/moonyacc/lib/grm#Grammar\">@hackwaly/moonyacc/lib/grm.Grammar</a>) -> <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>",
          "loc": { "line": 23, "column": 24 }
        },
        {
          "name": "new",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>::new(production : <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>, dot : Int) -> <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>",
          "loc": { "line": 5, "column": 24 }
        },
        {
          "name": "unsafe_shift",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>::unsafe_shift(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>) -> <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>",
          "loc": { "line": 41, "column": 24 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>) -> Int",
              "loc": { "line": 2, "column": 45 }
            }
          ],
          "loc": { "line": 2, "column": 45 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>) -> Bool",
              "loc": { "line": 2, "column": 41 }
            }
          ],
          "loc": { "line": 2, "column": 41 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Hash\">Hash</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>",
          "methods": [
            {
              "name": "hash_combine",
              "docstring": "automatically derived",
              "signature": "fn hash_combine(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": { "line": 2, "column": 54 }
            }
          ],
          "loc": { "line": 2, "column": 54 }
        }
      ]
    },
    {
      "name": "EncodedLR0ItemSet",
      "docstring": " Always sorted",
      "signature": "pub(all) struct EncodedLR0ItemSet {\n  items : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>]\n  hash : Int?\n}",
      "loc": { "line": 2, "column": 17 },
      "methods": [
        {
          "name": "decode_iter",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>::decode_iter(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>, grammar : <a href=\"hackwaly/moonyacc/lib/grm#Grammar\">@hackwaly/moonyacc/lib/grm.Grammar</a>) -> <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[(Int, <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>)]",
          "loc": { "line": 52, "column": 27 }
        },
        {
          "name": "empty",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>::empty() -> <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>",
          "loc": { "line": 35, "column": 27 }
        },
        {
          "name": "from_sorted_array",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>::from_sorted_array(items : <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>]) -> <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>",
          "loc": { "line": 45, "column": 27 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Default\">Default</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>",
          "methods": [
            {
              "name": "default",
              "docstring": "",
              "signature": "fn default() -> <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>",
              "loc": { "line": 40, "column": 45 }
            }
          ],
          "loc": { "line": 40, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "",
              "signature": "fn op_equal(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>, other : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>) -> Bool",
              "loc": { "line": 8, "column": 40 }
            }
          ],
          "loc": { "line": 8, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Hash\">Hash</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>",
          "methods": [
            {
              "name": "hash",
              "docstring": "",
              "signature": "fn hash(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>) -> Int",
              "loc": { "line": 19, "column": 42 }
            },
            {
              "name": "hash_combine",
              "docstring": "",
              "signature": "fn hash_combine(self : <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0ItemSet\">EncodedLR0ItemSet</a>, _hasher : <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": { "line": 13, "column": 42 }
            }
          ],
          "loc": { "line": 13, "column": 1 }
        }
      ]
    },
    {
      "name": "EncodedLR1ItemSet",
      "docstring": "",
      "signature": "type EncodedLR1ItemSet",
      "loc": { "line": 2, "column": 8 },
      "methods": [],
      "impls": []
    },
    {
      "name": "EncodedLookaheadSet",
      "docstring": "\n 0: EndOfInput\n 1..<1024: Terminal number + 1",
      "signature": "type EncodedLookaheadSet",
      "loc": { "line": 4, "column": 6 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>, <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>) -> Int",
              "loc": { "line": 4, "column": 54 }
            }
          ],
          "loc": { "line": 4, "column": 54 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>, <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>) -> Bool",
              "loc": { "line": 4, "column": 50 }
            }
          ],
          "loc": { "line": 4, "column": 50 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Hash\">Hash</a> for <a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>",
          "methods": [
            {
              "name": "hash_combine",
              "docstring": "automatically derived",
              "signature": "fn hash_combine(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLookaheadSet\">EncodedLookaheadSet</a>, <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": { "line": 4, "column": 63 }
            }
          ],
          "loc": { "line": 4, "column": 63 }
        }
      ]
    },
    {
      "name": "EncodedSymbolicLookaheadSet",
      "docstring": "",
      "signature": "type EncodedSymbolicLookaheadSet",
      "loc": { "line": 2, "column": 8 },
      "methods": [],
      "impls": []
    },
    {
      "name": "EpsilonLookaheadSet",
      "docstring": "",
      "signature": "type EpsilonLookaheadSet",
      "loc": { "line": 2, "column": 8 },
      "methods": [],
      "impls": []
    },
    {
      "name": "LR0Item",
      "docstring": "",
      "signature": "pub(all) struct LR0Item {\n  production : <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>\n  dot : Int\n}",
      "loc": { "line": 2, "column": 17 },
      "methods": [
        {
          "name": "new",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>::new(production : <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>, dot : Int) -> <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>",
          "loc": { "line": 8, "column": 17 }
        },
        {
          "name": "postdot",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>::postdot(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>) -> <a href=\"hackwaly/moonyacc/lib/grm#Symbol\">@hackwaly/moonyacc/lib/grm.Symbol</a>?",
          "loc": { "line": 13, "column": 17 }
        },
        {
          "name": "shift",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>::shift(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>) -> <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>",
          "loc": { "line": 22, "column": 17 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>) -> Int",
              "loc": { "line": 5, "column": 14 }
            }
          ],
          "loc": { "line": 5, "column": 14 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>) -> Bool",
              "loc": { "line": 5, "column": 10 }
            }
          ],
          "loc": { "line": 5, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Hash\">Hash</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>",
          "methods": [
            {
              "name": "hash_combine",
              "docstring": "automatically derived",
              "signature": "fn hash_combine(<a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>, <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": { "line": 5, "column": 23 }
            }
          ],
          "loc": { "line": 5, "column": 23 }
        }
      ]
    },
    {
      "name": "LR0Node",
      "docstring": "",
      "signature": "type LR0Node",
      "loc": { "line": 35, "column": 8 },
      "methods": [],
      "impls": []
    },
    {
      "name": "LR1Item",
      "docstring": "",
      "signature": "pub(all) struct LR1Item {\n  production : <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>\n  dot : Int\n  lookahead : <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>\n}",
      "loc": { "line": 2, "column": 17 },
      "methods": [
        {
          "name": "core",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>::core(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>) -> <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>",
          "loc": { "line": 9, "column": 17 }
        },
        {
          "name": "postdot",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>::postdot(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>) -> <a href=\"hackwaly/moonyacc/lib/grm#Symbol\">@hackwaly/moonyacc/lib/grm.Symbol</a>?",
          "loc": { "line": 14, "column": 17 }
        },
        {
          "name": "shift",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>::shift(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>) -> <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>",
          "loc": { "line": 23, "column": 17 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>) -> Int",
              "loc": { "line": 6, "column": 14 }
            }
          ],
          "loc": { "line": 6, "column": 14 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>) -> Bool",
              "loc": { "line": 6, "column": 10 }
            }
          ],
          "loc": { "line": 6, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1Item\">LR1Item</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 29, "column": 32 }
            }
          ],
          "loc": { "line": 29, "column": 1 }
        }
      ]
    },
    {
      "name": "LR1ItemGroup",
      "docstring": "",
      "signature": "pub(all) struct LR1ItemGroup {\n  core : <a href=\"hackwaly/moonyacc/lib/lr1#LR0Item\">LR0Item</a>\n  lookahead_set : <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[<a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>]\n}",
      "loc": { "line": 2, "column": 17 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR1ItemGroup\">LR1ItemGroup</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1ItemGroup\">LR1ItemGroup</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 8, "column": 37 }
            }
          ],
          "loc": { "line": 8, "column": 1 }
        }
      ]
    },
    {
      "name": "LR1PreState",
      "docstring": "",
      "signature": "type LR1PreState",
      "loc": { "line": 55, "column": 8 },
      "methods": [],
      "impls": []
    },
    {
      "name": "LR1State",
      "docstring": "",
      "signature": "pub(all) struct LR1State {\n  num : Int\n  goto : <a href=\"moonbitlang/core/sorted_map#T\">@moonbitlang/core/sorted_map.T</a>[<a href=\"hackwaly/moonyacc/lib/grm#Symbol\">@hackwaly/moonyacc/lib/grm.Symbol</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>]\n  action : <a href=\"moonbitlang/core/sorted_map#T\">@moonbitlang/core/sorted_map.T</a>[<a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, <a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>]\n  stamp : <a href=\"hackwaly/moonyacc/lib/util/stamp#Stamp\">@hackwaly/moonyacc/lib/util/stamp.Stamp</a>\n  // private fields\n}",
      "loc": { "line": 61, "column": 17 },
      "methods": [
        {
          "name": "iter_item_groups",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>::iter_item_groups(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>) -> <a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[<a href=\"hackwaly/moonyacc/lib/lr1#LR1ItemGroup\">LR1ItemGroup</a>]",
          "loc": { "line": 85, "column": 18 }
        },
        {
          "name": "set_action",
          "docstring": "",
          "signature": "fn <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>::set_action(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, input : <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, decision : <a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>) -> Unit",
          "loc": { "line": 90, "column": 18 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "",
              "signature": "fn compare(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, other : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>) -> Int",
              "loc": { "line": 75, "column": 36 }
            }
          ],
          "loc": { "line": 75, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "",
              "signature": "fn op_equal(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, other : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>) -> Bool",
              "loc": { "line": 72, "column": 31 }
            }
          ],
          "loc": { "line": 72, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Hash\">Hash</a> for <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>",
          "methods": [
            {
              "name": "hash_combine",
              "docstring": "",
              "signature": "fn hash_combine(self : <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, hasher : <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": { "line": 80, "column": 33 }
            }
          ],
          "loc": { "line": 80, "column": 1 }
        }
      ]
    },
    {
      "name": "Lookahead",
      "docstring": "",
      "signature": "pub(all) enum Lookahead {\n  EndOfInput\n  Input(<a href=\"hackwaly/moonyacc/lib/grm#Terminal\">@hackwaly/moonyacc/lib/grm.Terminal</a>)\n}",
      "loc": { "line": 2, "column": 15 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>) -> Int",
              "loc": { "line": 5, "column": 14 }
            }
          ],
          "loc": { "line": 5, "column": 14 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>) -> Bool",
              "loc": { "line": 5, "column": 10 }
            }
          ],
          "loc": { "line": 5, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Hash\">Hash</a> for <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>",
          "methods": [
            {
              "name": "hash_combine",
              "docstring": "",
              "signature": "fn hash_combine(self : <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, hasher : <a href=\"moonbitlang/core/builtin#Hasher\">Hasher</a>) -> Unit",
              "loc": { "line": 8, "column": 34 }
            }
          ],
          "loc": { "line": 8, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 16, "column": 34 }
            }
          ],
          "loc": { "line": 16, "column": 1 }
        }
      ]
    },
    {
      "name": "ResolveConflictError",
      "docstring": "",
      "signature": "pub(all) enum ResolveConflictError {\n  Reduce_conflict_resolved_by_presentation_order(<a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>], <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>)\n  Shift_reduce_conflict_resolved_without_precedence(<a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>)\n  Shift_reduce_conflict_not_resolved_because_of_non_assoc(<a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, <a href=\"hackwaly/moonyacc/lib/lr1#Lookahead\">Lookahead</a>, <a href=\"hackwaly/moonyacc/lib/lr1#LR1State\">LR1State</a>, <a href=\"hackwaly/moonyacc/lib/grm#Production\">@hackwaly/moonyacc/lib/grm.Production</a>)\n}",
      "loc": { "line": 2, "column": 15 },
      "methods": [],
      "impls": []
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "build_closure_fn",
      "docstring": "",
      "signature": "fn build_closure_fn[LookaheadSet : <a href=\"hackwaly/moonyacc/lib/lr1#AbstractLookaheadSet\">AbstractLookaheadSet</a>](grammar : <a href=\"hackwaly/moonyacc/lib/grm#Grammar\">@hackwaly/moonyacc/lib/grm.Grammar</a>) -> ((<a href=\"moonbitlang/core/builtin#Iter\">Iter</a>[(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, LookaheadSet)]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[(<a href=\"hackwaly/moonyacc/lib/lr1#EncodedLR0Item\">EncodedLR0Item</a>, LookaheadSet)])",
      "loc": { "line": 2, "column": 8 }
    },
    {
      "name": "resolve_conflicts",
      "docstring": " Resolve conflicts by using precedence and associativity information",
      "signature": "fn resolve_conflicts(conflicts : <a href=\"hackwaly/moonyacc/lib/util/hashmap2#T\">@hackwaly/moonyacc/lib/util/hashmap2.T</a>[<a href=\"hackwaly/moonyacc/lib/lr1#ConflictLocation\">ConflictLocation</a>, <a href=\"moonbitlang/core/immut/list#T\">@moonbitlang/core/immut/list.T</a>[<a href=\"hackwaly/moonyacc/lib/lr1#Decision\">Decision</a>]]) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"hackwaly/moonyacc/lib/lr1#ResolveConflictError\">ResolveConflictError</a>]",
      "loc": { "line": 24, "column": 8 }
    }
  ],
  "misc": []
}