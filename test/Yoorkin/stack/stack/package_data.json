{
  "readme": "",
  "name": "Yoorkin/stack/stack",
  "traits": [],
  "types": [
    {
      "name": "Stack",
      "docstring": " A stack of values of type `T`.\n\n # Usage\n\n ```\n fn init {\n   // Create a new stack of integers\n   let stack : Stack[Int] = Stack.make()\n \n   // Push some values onto the stack\n   stack.push(10)\n   stack.push(20)\n   stack.push(30)\n \n   // Pop values from the stack\n   let value1 = stack.pop()\n   let value2 = stack.pop()\n   let value3 = stack.pop()\n \n   // Print the popped values\n   print(value1) // Output: 30\n   print(value2) // Output: 20\n   print(value3) // Output: 10\n }\n ```\n",
      "signature": "type Stack",
      "loc": { "line": 28, "column": 8 },
      "methods": [
        {
          "name": "make",
          "docstring": " Creates a new empty stack.\n\n # Returns\n\n A new empty stack.\n",
          "signature": "fn <a href=\"Yoorkin/stack/stack#Stack\">Stack</a>::make[T]() -> <a href=\"Yoorkin/stack/stack#Stack\">Stack</a>[T]",
          "loc": { "line": 68, "column": 15 }
        },
        {
          "name": "pop",
          "docstring": " Pops a value from the stack.\n\n # Returns\n\n The value popped from the stack.\n\n # Panics\n\n Panics if the stack is empty.\n",
          "signature": "fn <a href=\"Yoorkin/stack/stack#Stack\">Stack</a>::pop[T](self : <a href=\"Yoorkin/stack/stack#Stack\">Stack</a>[T]) -> T",
          "loc": { "line": 52, "column": 8 }
        },
        {
          "name": "push",
          "docstring": " Pushes a value onto the stack.\n\n # Arguments\n\n * `val` - The value to be pushed onto the stack.\n",
          "signature": "fn <a href=\"Yoorkin/stack/stack#Stack\">Stack</a>::push[T](self : <a href=\"Yoorkin/stack/stack#Stack\">Stack</a>[T], val : T) -> Unit",
          "loc": { "line": 38, "column": 8 }
        }
      ],
      "impls": []
    }
  ],
  "typealias": [],
  "values": [],
  "misc": []
}