{
  "readme": "",
  "name": "rami3l/cmark/cmark_base",
  "traits": [],
  "types": [
    {
      "name": "Exit",
      "docstring": "",
      "signature": "pub(all) type! Exit\n",
      "loc": { "line": 2, "column": 16 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#Exit\">Exit</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#Exit\">Exit</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 2, "column": 29 }
            }
          ],
          "loc": { "line": 2, "column": 29 }
        }
      ]
    },
    {
      "name": "FencedCodeBlockContinue",
      "docstring": "",
      "signature": "pub(all) enum FencedCodeBlockContinue {\n  Close(Int, Int)\n  Code\n}",
      "loc": { "line": 258, "column": 15 },
      "methods": [
        {
          "name": "new",
          "docstring": " `fenced_code_block_continue(fence, s, last, start)` indicates\n whether the fence code continues or closes in the the range\n [start;last] given the opening `open` which indicates the\n indent, fence char and number of fence chars.",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#FencedCodeBlockContinue\">FencedCodeBlockContinue</a>::new(s : String, fence~ : (Char, Int), last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#FencedCodeBlockContinue\">FencedCodeBlockContinue</a>",
          "loc": { "line": 267, "column": 33 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#FencedCodeBlockContinue\">FencedCodeBlockContinue</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#FencedCodeBlockContinue\">FencedCodeBlockContinue</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 261, "column": 10 }
            }
          ],
          "loc": { "line": 261, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#FencedCodeBlockContinue\">FencedCodeBlockContinue</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#FencedCodeBlockContinue\">FencedCodeBlockContinue</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 261, "column": 16 }
            }
          ],
          "loc": { "line": 261, "column": 16 }
        }
      ]
    },
    {
      "name": "HtmlBlockEndCond",
      "docstring": "",
      "signature": "pub(all) enum HtmlBlockEndCond {\n  EndStr(String)\n  EndCond1\n  EndBlank\n  EndBlank7\n}",
      "loc": { "line": 5, "column": 15 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>, <a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>) -> Bool",
              "loc": { "line": 10, "column": 24 }
            }
          ],
          "loc": { "line": 10, "column": 24 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 10, "column": 10 }
            }
          ],
          "loc": { "line": 10, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 10, "column": 16 }
            }
          ],
          "loc": { "line": 10, "column": 16 }
        }
      ]
    },
    {
      "name": "LineSpan",
      "docstring": "",
      "signature": "pub(all) struct LineSpan {\n  pos : (Int, Int)\n  first : Int\n  last : Int\n}",
      "loc": { "line": 100, "column": 17 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>) -> Int",
              "loc": { "line": 104, "column": 28 }
            }
          ],
          "loc": { "line": 104, "column": 28 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>) -> Bool",
              "loc": { "line": 104, "column": 24 }
            }
          ],
          "loc": { "line": 104, "column": 24 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 104, "column": 10 }
            }
          ],
          "loc": { "line": 104, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 104, "column": 16 }
            }
          ],
          "loc": { "line": 104, "column": 16 }
        }
      ]
    },
    {
      "name": "LineType",
      "docstring": "",
      "signature": "pub(all) enum LineType {\n  AtxHeadingLine(Int, Int, Int, Int)\n  BlankLine\n  BlockQuoteLine\n  FencedCodeBlockLine(Int, Int, (Int, Int)?)\n  HtmlBlockLine(<a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>)\n  IndentedCodeBlockLine\n  ListMarkerLine(<a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>, Int)\n  ParagraphLine\n  SetextUnderlineLine(Int, Int)\n  ThematicBreakLine(Int)\n  ExtTableRow(Int)\n  ExtFootnoteLabel(<a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>], Int, String)\n  Nomatch\n}",
      "loc": { "line": 30, "column": 15 },
      "methods": [
        {
          "name": "atx_heading",
          "docstring": " https://spec.commonmark.org/current/#atx-headings",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::atx_heading(s : String, last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 78, "column": 18 }
        },
        {
          "name": "ext_footnote_label",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::ext_footnote_label(buf : <a href=\"moonbitlang/core/builtin#StringBuilder\">StringBuilder</a>, s : String, line_pos~ : (Int, Int), last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 532, "column": 18 }
        },
        {
          "name": "ext_table_row",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::ext_table_row(s : String, last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 517, "column": 18 }
        },
        {
          "name": "fenced_code_block_start",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::fenced_code_block_start(s : String, last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 188, "column": 18 }
        },
        {
          "name": "html_block_end",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::html_block_end(s : String, end_cond~ : <a href=\"rami3l/cmark/cmark_base#HtmlBlockEndCond\">HtmlBlockEndCond</a>, last~ : Int, start~ : Int) -> Bool",
          "loc": { "line": 503, "column": 18 }
        },
        {
          "name": "html_block_start",
          "docstring": " https://spec.commonmark.org/current/#html-blocks",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::html_block_start(s : String, last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 405, "column": 18 }
        },
        {
          "name": "list_marker",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::list_marker(s : String, last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 587, "column": 18 }
        },
        {
          "name": "setext_heading_underline",
          "docstring": " https://spec.commonmark.org/current/#setext-heading",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::setext_heading_underline(s : String, last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 155, "column": 18 }
        },
        {
          "name": "thematic_break",
          "docstring": " https://spec.commonmark.org/current/#thematic-breaks",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>::thematic_break(s : String, last~ : Int, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "loc": { "line": 47, "column": 18 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>, <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>) -> Bool",
              "loc": { "line": 44, "column": 24 }
            }
          ],
          "loc": { "line": 44, "column": 24 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 44, "column": 10 }
            }
          ],
          "loc": { "line": 44, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#LineType\">LineType</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 44, "column": 16 }
            }
          ],
          "loc": { "line": 44, "column": 16 }
        }
      ]
    },
    {
      "name": "ListType",
      "docstring": "",
      "signature": "pub(all) enum ListType {\n  Unordered(Char)\n  Ordered(Int, Char)\n}",
      "loc": { "line": 13, "column": 15 },
      "methods": [
        {
          "name": "is_same_type",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>::is_same_type(self : <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>, other : <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>) -> Bool",
          "loc": { "line": 21, "column": 18 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>, <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>) -> Bool",
              "loc": { "line": 18, "column": 34 }
            }
          ],
          "loc": { "line": 18, "column": 34 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 18, "column": 10 }
            }
          ],
          "loc": { "line": 18, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 18, "column": 26 }
            }
          ],
          "loc": { "line": 18, "column": 26 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/json#FromJson\">@moonbitlang/core/json.FromJson</a> for <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>",
          "methods": [
            {
              "name": "from_json",
              "docstring": "automatically derived",
              "signature": "fn from_json(<a href=\"moonbitlang/core/json#Json\">Json</a>, <a href=\"moonbitlang/core/json#JsonPath\">@moonbitlang/core/json.JsonPath</a>) -> <a href=\"rami3l/cmark/cmark_base#ListType\">ListType</a>!<a href=\"moonbitlang/core/json#JsonDecodeError\">@moonbitlang/core/json.JsonDecodeError</a>",
              "loc": { "line": 18, "column": 16 }
            }
          ],
          "loc": { "line": 18, "column": 16 }
        }
      ]
    },
    {
      "name": "Meta",
      "docstring": "",
      "signature": "pub(all) struct Meta {\n  id : Int\n  loc : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>\n  extra : <a href=\"moonbitlang/core/error#Error\">Error</a>?\n}",
      "loc": { "line": 2, "column": 17 },
      "methods": [
        {
          "name": "compare",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>::compare(self : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>, other : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>) -> Int",
          "loc": { "line": 35, "column": 14 }
        },
        {
          "name": "is_none",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>::is_none(self : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>) -> Bool",
          "loc": { "line": 40, "column": 14 }
        },
        {
          "name": "new",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>::new(loc~ : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a> = ..) -> <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>",
          "loc": { "line": 15, "column": 14 }
        },
        {
          "name": "none",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>::none() -> <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>",
          "loc": { "line": 25, "column": 14 }
        },
        {
          "name": "op_equal",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>::op_equal(self : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>, other : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>) -> Bool",
          "loc": { "line": 30, "column": 14 }
        },
        {
          "name": "to_json",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>::to_json(self : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
          "loc": { "line": 72, "column": 14 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 45, "column": 29 }
            }
          ],
          "loc": { "line": 45, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "",
              "signature": "fn to_json(self : <a href=\"rami3l/cmark/cmark_base#Meta\">Meta</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 60, "column": 31 }
            }
          ],
          "loc": { "line": 60, "column": 1 }
        }
      ]
    },
    {
      "name": "NextLineResult",
      "docstring": "",
      "signature": "pub(all) enum NextLineResult {\n  ThisLine(Int)\n  NextLine(<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, Int)\n}",
      "loc": { "line": 117, "column": 15 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#NextLineResult\">NextLineResult</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#NextLineResult\">NextLineResult</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 120, "column": 10 }
            }
          ],
          "loc": { "line": 120, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#NextLineResult\">NextLineResult</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#NextLineResult\">NextLineResult</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 120, "column": 16 }
            }
          ],
          "loc": { "line": 120, "column": 16 }
        }
      ]
    },
    {
      "name": "Span",
      "docstring": "",
      "signature": "pub(all) struct Span {\n  start : Int\n  span : <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>\n}",
      "loc": { "line": 108, "column": 17 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"rami3l/cmark/cmark_base#Span\">Span</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>, <a href=\"rami3l/cmark/cmark_base#Span\">Span</a>) -> Int",
              "loc": { "line": 111, "column": 28 }
            }
          ],
          "loc": { "line": 111, "column": 28 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"rami3l/cmark/cmark_base#Span\">Span</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>, <a href=\"rami3l/cmark/cmark_base#Span\">Span</a>) -> Bool",
              "loc": { "line": 111, "column": 24 }
            }
          ],
          "loc": { "line": 111, "column": 24 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#Span\">Span</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 111, "column": 10 }
            }
          ],
          "loc": { "line": 111, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#Span\">Span</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 111, "column": 16 }
            }
          ],
          "loc": { "line": 111, "column": 16 }
        }
      ]
    },
    {
      "name": "TextLoc",
      "docstring": "",
      "signature": "pub(all) struct TextLoc {\n  file : String\n  first_byte : Int\n  last_byte : Int\n  first_line : (Int, Int)\n  last_line : (Int, Int)\n}",
      "loc": { "line": 2, "column": 17 },
      "methods": [
        {
          "name": "after",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::after(self : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "loc": { "line": 45, "column": 17 }
        },
        {
          "name": "is_empty",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::is_empty(self : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> Bool",
          "loc": { "line": 30, "column": 17 }
        },
        {
          "name": "is_none",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::is_none(self : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> Bool",
          "loc": { "line": 25, "column": 17 }
        },
        {
          "name": "none",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::none() -> <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "loc": { "line": 20, "column": 17 }
        },
        {
          "name": "reloc",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::reloc(self : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>, other : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "loc": { "line": 67, "column": 17 }
        },
        {
          "name": "span",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::span(self : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>, other : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "loc": { "line": 56, "column": 17 }
        },
        {
          "name": "to_first",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::to_first(self : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "loc": { "line": 35, "column": 17 }
        },
        {
          "name": "to_last",
          "docstring": "",
          "signature": "fn <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>::to_last(self : <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "loc": { "line": 40, "column": 17 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Compare\">Compare</a> for <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "methods": [
            {
              "name": "compare",
              "docstring": "automatically derived",
              "signature": "fn compare(<a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>, <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> Int",
              "loc": { "line": 8, "column": 14 }
            }
          ],
          "loc": { "line": 8, "column": 14 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "automatically derived",
              "signature": "fn op_equal(<a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>, <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> Bool",
              "loc": { "line": 8, "column": 10 }
            }
          ],
          "loc": { "line": 8, "column": 10 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 8, "column": 23 }
            }
          ],
          "loc": { "line": 8, "column": 23 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#ToJson\">ToJson</a> for <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "methods": [
            {
              "name": "to_json",
              "docstring": "automatically derived",
              "signature": "fn to_json(<a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>) -> <a href=\"moonbitlang/core/json#Json\">Json</a>",
              "loc": { "line": 8, "column": 39 }
            }
          ],
          "loc": { "line": 8, "column": 39 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/json#FromJson\">@moonbitlang/core/json.FromJson</a> for <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>",
          "methods": [
            {
              "name": "from_json",
              "docstring": "automatically derived",
              "signature": "fn from_json(<a href=\"moonbitlang/core/json#Json\">Json</a>, <a href=\"moonbitlang/core/json#JsonPath\">@moonbitlang/core/json.JsonPath</a>) -> <a href=\"rami3l/cmark/cmark_base#TextLoc\">TextLoc</a>!<a href=\"moonbitlang/core/json#JsonDecodeError\">@moonbitlang/core/json.JsonDecodeError</a>",
              "loc": { "line": 8, "column": 29 }
            }
          ],
          "loc": { "line": 8, "column": 29 }
        }
      ]
    }
  ],
  "typealias": [
    {
      "name": "BytePos",
      "docstring": "",
      "signature": "type BytePos = Int",
      "loc": { "line": 82, "column": 1 }
    },
    {
      "name": "FilePath",
      "docstring": "",
      "signature": "type FilePath = String",
      "loc": { "line": 76, "column": 1 }
    },
    {
      "name": "First",
      "docstring": "",
      "signature": "type First = Int",
      "loc": { "line": 7, "column": 1 }
    },
    {
      "name": "HeadingLevel",
      "docstring": "",
      "signature": "type HeadingLevel = Int",
      "loc": { "line": 20, "column": 1 }
    },
    {
      "name": "Indent",
      "docstring": "",
      "signature": "type Indent = Int",
      "loc": { "line": 3, "column": 1 }
    },
    {
      "name": "Last",
      "docstring": "",
      "signature": "type Last = Int",
      "loc": { "line": 11, "column": 1 }
    },
    {
      "name": "LineNum",
      "docstring": "",
      "signature": "type LineNum = Int",
      "loc": { "line": 88, "column": 1 }
    },
    {
      "name": "LinePos",
      "docstring": "",
      "signature": "type LinePos = (Int, Int)",
      "loc": { "line": 94, "column": 1 }
    },
    {
      "name": "Next",
      "docstring": "",
      "signature": "type Next = Int",
      "loc": { "line": 16, "column": 1 }
    },
    {
      "name": "NextLineFn",
      "docstring": "",
      "signature": "type NextLineFn = (A) -> <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>?",
      "loc": { "line": 114, "column": 1 }
    }
  ],
  "values": [
    {
      "name": "autolink_email",
      "docstring": " `autolink_email(s, last, start)` matches an email autolink starting at\n `start` in the range `[start;last]` (assumed on the same line).",
      "signature": "fn autolink_email(s : String, last~ : Int = .., start~ : Int = ..) -> Int?",
      "loc": { "line": 3, "column": 8 }
    },
    {
      "name": "autolink_uri",
      "docstring": " `autolink_uri(s, last, start)` matches an URI autolink starting at\n `start` in the range `[start;last]` (assumed on the same line).",
      "signature": "fn autolink_uri(s : String, last~ : Int = .., start~ : Int = ..) -> Int?",
      "loc": { "line": 57, "column": 8 }
    },
    {
      "name": "byte_pos_none",
      "docstring": "",
      "signature": "let byte_pos_none : Int",
      "loc": { "line": 85, "column": 9 }
    },
    {
      "name": "could_be_link_ref_definition",
      "docstring": "",
      "signature": "fn could_be_link_ref_definition(s : String, last~ : Int, start~ : Int) -> Bool",
      "loc": { "line": 562, "column": 8 }
    },
    {
      "name": "ext_task_marker",
      "docstring": "",
      "signature": "fn ext_task_marker(s : String, last~ : Int, start~ : Int) -> (Char, Int)?",
      "loc": { "line": 634, "column": 8 }
    },
    {
      "name": "file_path_none",
      "docstring": "",
      "signature": "let file_path_none : String",
      "loc": { "line": 79, "column": 9 }
    },
    {
      "name": "first_non_blank",
      "docstring": " `first_non_blank(s, last, start)` is the first position in the range `[start, last]`\n that is not blank and `last + 1` if there is none.",
      "signature": "fn first_non_blank(s : String, last~ : Int, start~ : Int) -> Int",
      "loc": { "line": 17, "column": 8 }
    },
    {
      "name": "first_non_blank_in_span",
      "docstring": " `first_non_blank_in_span(s, span)` is `first_non_blank(s, last=span.last, start=span.first)`.",
      "signature": "fn first_non_blank_in_span(s : String, span : <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>) -> Int",
      "loc": { "line": 30, "column": 8 }
    },
    {
      "name": "first_non_blank_over_nl",
      "docstring": " `first_non_blank_over_nl(next_line, s, lines, line, start)` is the first byte position starting with `start`\n that is not blank in `line` or on the next line as determined by `next_line`.\n Returns `None` if there is no such position.",
      "signature": "fn first_non_blank_over_nl[A](next_line~ : (A) -> <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>?, s : String, lines : A, line~ : <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, start~ : Int) -> <a href=\"rami3l/cmark/cmark_base#NextLineResult\">NextLineResult</a>?",
      "loc": { "line": 153, "column": 8 }
    },
    {
      "name": "first_non_escaped_char",
      "docstring": " `first_non_escaped_char(c, s, last, start)` is the first `BytePos`\n in the range `[start, last]` that has `c` unescaped and `last + 1` if there is none.",
      "signature": "fn first_non_escaped_char(c : Char, s : String, last~ : Int, start~ : Int) -> Int",
      "loc": { "line": 198, "column": 8 }
    },
    {
      "name": "last_non_blank",
      "docstring": " `last_non_blank(s, first, start)` is the last position in the range `[first, start]`\n that is not blank and `first - 1` if there is none.",
      "signature": "fn last_non_blank(s : String, first~ : Int, start~ : Int) -> Int",
      "loc": { "line": 36, "column": 8 }
    },
    {
      "name": "line_num_none",
      "docstring": "",
      "signature": "let line_num_none : Int",
      "loc": { "line": 91, "column": 9 }
    },
    {
      "name": "line_pos_none",
      "docstring": "",
      "signature": "let line_pos_none : (Int, Int)",
      "loc": { "line": 97, "column": 9 }
    },
    {
      "name": "link_destination",
      "docstring": " `link_destination(s, last, start)` matches a link destination\n starting at `start` in the range `start..=last` (assumed on\n the same line). This is `Some((delimited, first, last))` with the\n data in [first..=last] the destination data. `delimited` is\n `true` if `first-1` is '<' and `last + 1` is '>'.\n\n See: https://spec.commonmark.org/current/#link-destination",
      "signature": "fn link_destination(s : String, last~ : Int, start~ : Int) -> (Bool, Int, Int)?",
      "loc": { "line": 8, "column": 8 }
    },
    {
      "name": "link_label",
      "docstring": " Matches a link label on `line` starting at `start`.\n The byte ranges have the label's content, the string is the normalized label.\n `buf` is used as scratch space.\n\n See: https://spec.commonmark.org/current/#link-label",
      "signature": "fn link_label[A](buf : <a href=\"moonbitlang/core/builtin#StringBuilder\">StringBuilder</a>, next_line~ : (A) -> <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>?, s : String, lines : A, line~ : <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, start~ : Int) -> (<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>], Int, String)?",
      "loc": { "line": 132, "column": 8 }
    },
    {
      "name": "link_title",
      "docstring": " `link_title(next_line, s, lines, line, last)` is a link title on line `line` starting at `start`. \n Returns `Some((lines, last_line, spans, last))` with `lines` the lines after consuming the title,\n `last_line` the line where it stops, `spans` the byte ranges of `s` that make up the title in reverse\n order, `last` is on the closing delimiter and guaranteed to be on `last_line`. \n\n See: https://spec.commonmark.org/current/#link-title ",
      "signature": "fn link_title[A](next_line~ : (A) -> <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>?, s : String, lines : A, line~ : <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, start~ : Int) -> (<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>], Int)?",
      "loc": { "line": 79, "column": 8 }
    },
    {
      "name": "raw_html",
      "docstring": " https://spec.commonmark.org/current/#html-tag",
      "signature": "fn raw_html[A : <a href=\"moonbitlang/core/builtin#Show\">Show</a>](next_line~ : (A) -> <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>?, s : String, lines : A, line~ : <a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, start~ : Int) -> (<a href=\"rami3l/cmark/cmark_base#LineSpan\">LineSpan</a>, <a href=\"moonbitlang/core/array#Array\">Array</a>[<a href=\"rami3l/cmark/cmark_base#Span\">Span</a>], Int)?",
      "loc": { "line": 356, "column": 8 }
    },
    {
      "name": "rev_drop_spaces",
      "docstring": " `rev_drop_spaces(s, first, start)` is the last position in the range `[first, start]`\n that is not U+0020 and `first - 1` if there is none.",
      "signature": "fn rev_drop_spaces(s : String, first~ : Int, start~ : Int) -> Int",
      "loc": { "line": 52, "column": 8 }
    },
    {
      "name": "run_of",
      "docstring": " `run_of(char, s, last, start)` is the last position of a consecutive run of `char`\n in the range `[start, last]` or `start - 1` if `start` is not `char`.",
      "signature": "fn run_of(char~ : Char, s : String, last~ : Int, start~ : Int) -> Int",
      "loc": { "line": 3, "column": 8 }
    }
  ],
  "misc": []
}