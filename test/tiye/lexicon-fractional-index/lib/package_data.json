{
  "readme": "",
  "name": "tiye/lexicon-fractional-index/lib",
  "traits": [],
  "types": [
    {
      "name": "KeyError",
      "docstring": " common error structure of lexicon order key",
      "signature": "pub type! KeyError String\n",
      "loc": { "line": 8, "column": 11 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"tiye/lexicon-fractional-index/lib#KeyError\">KeyError</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "automatically derived",
              "signature": "fn output(<a href=\"tiye/lexicon-fractional-index/lib#KeyError\">KeyError</a>, <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 8, "column": 34 }
            }
          ],
          "loc": { "line": 8, "column": 34 }
        }
      ]
    }
  ],
  "typealias": [],
  "values": [
    {
      "name": "float64_approx",
      "docstring": " float64_approx converts a key as generated by key_between() to a float64.\n Because the range of keys is far larger than float64 can represent\n accurately, this is necessarily approximate. But for many use cases it should\n be, as they say, close enough for jazz.",
      "signature": "fn float64_approx(key : String) -> Double!<a href=\"tiye/lexicon-fractional-index/lib#KeyError\">KeyError</a>",
      "loc": { "line": 302, "column": 8 }
    },
    {
      "name": "key_between",
      "docstring": " key_between returns a key that sorts lexicographically between a and b.\n Either a or b can be empty strings. If a is empty it indicates smallest key,\n If b is empty it indicates largest key.\n b must be empty string or > a.",
      "signature": "fn key_between(a : String?, b : String?) -> String!<a href=\"tiye/lexicon-fractional-index/lib#KeyError\">KeyError</a>",
      "loc": { "line": 37, "column": 8 }
    },
    {
      "name": "n_keys_between",
      "docstring": " n_keys_between returns n keys between a and b that sorts lexicographically.\n Either a or b can be empty strings. If a is empty it indicates smallest key,\n If b is empty it indicates largest key.\n b must be empty string or > a.",
      "signature": "fn n_keys_between(a : String?, b : String?, n : Int) -> <a href=\"moonbitlang/core/array#Array\">Array</a>[String]!<a href=\"tiye/lexicon-fractional-index/lib#KeyError\">KeyError</a>",
      "loc": { "line": 338, "column": 8 }
    },
    {
      "name": "pow",
      "docstring": "",
      "signature": "fn pow(x : Int, exp : Int) -> Int",
      "loc": { "line": 390, "column": 8 }
    },
    {
      "name": "powf",
      "docstring": "",
      "signature": "fn powf(x : Double, exp : Int) -> Double",
      "loc": { "line": 398, "column": 8 }
    }
  ],
  "misc": []
}