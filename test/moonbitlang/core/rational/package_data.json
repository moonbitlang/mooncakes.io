{
  "readme": "# Rational\n\nThe `Rational` type represents a rational number, which is a number that can be expressed as a fraction `a/b` where `a` and `b` are integers and `b` is not zero.\n\n# Usage\n\n## Arithmetic Operations\n\nThe `Rational` type supports the following arithmetic operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L)\nlet b = @rational.new(1L, 3L)\nlet c = a + b // 5/6\nlet d = a - b // 1/6\nlet e = a * b // 1/6\nlet f = a / b // 3/2\nlet g = -a // -1/2\nlet h = a.reciprocal() // 2/1\nlet i = g.abs() // 1/2\n```\n\n## Comparison Operations\n\nThe `Rational` type supports the following comparison operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L)\nlet b = @raitonal.new(1L, 3L)\nlet c = a == b // false\nlet d = a != b // true\nlet e = a < b // false\nlet f = a <= b // false\nlet g = a > b // true\nlet h = a >= b // true\nlet i = a.compare(b) // -1\n```\n\n## Integer Operations\n\nThe `Rational` type supports the following integer operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L)\nlet c = a.floor() // 0\nlet d = a.ceil() // 1\nlet b = a.fract() // 1\nlet e = a.trunc() // 0\nlet h = a.is_integer() // false\n```\n\n## Double Operations\n\nThe `Rational` type supports the following double operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L)\nlet b = a.to_double() // 0.5\nlet c = @rational.from_double(0.5) // 1/2\n```\n\n## String Operations\n\nThe `Rational` type supports the following string operations:\n\n```moonbit\nlet a = @rational.new(1L, 2L)\nlet b = a.to_string() // \"1/2\"\n```\n\n",
  "name": "moonbitlang/core/rational",
  "traits": [],
  "types": [
    {
      "name": "RationalError",
      "docstring": "",
      "signature": "pub(all) type! RationalError String\n",
      "loc": { "line": 167, "column": 16 },
      "methods": [],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Eq\">Eq</a> for <a href=\"moonbitlang/core/rational#RationalError\">RationalError</a>",
          "methods": [
            {
              "name": "op_equal",
              "docstring": "",
              "signature": "fn op_equal(self : <a href=\"moonbitlang/core/rational#RationalError\">RationalError</a>, other : <a href=\"moonbitlang/core/rational#RationalError\">RationalError</a>) -> Bool",
              "loc": { "line": 177, "column": 36 }
            }
          ],
          "loc": { "line": 177, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"moonbitlang/core/rational#RationalError\">RationalError</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/core/rational#RationalError\">RationalError</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 170, "column": 38 }
            }
          ],
          "loc": { "line": 170, "column": 1 }
        }
      ]
    },
    {
      "name": "T",
      "docstring": "\n Rational number type.\n \n Invariants:\n - The denominator is always positive.\n - The numerator and denominator are always coprime.",
      "signature": "type T",
      "loc": { "line": 25, "column": 8 },
      "methods": [
        {
          "name": "abs",
          "docstring": "\n Returns the absolute value of a rational number.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::abs(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 125, "column": 8 }
        },
        {
          "name": "ceil",
          "docstring": "\n Ceils a rational number towards positive infinity.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::ceil(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> Int64",
          "loc": { "line": 265, "column": 8 }
        },
        {
          "name": "compare",
          "docstring": "\n Compares two rational numbers.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::compare(self : <a href=\"moonbitlang/core/rational#T\">T</a>, other : <a href=\"moonbitlang/core/rational#T\">T</a>) -> Int",
          "loc": { "line": 137, "column": 8 }
        },
        {
          "name": "floor",
          "docstring": "\n Floors a rational number towards negative infinity.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::floor(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> Int64",
          "loc": { "line": 277, "column": 8 }
        },
        {
          "name": "fract",
          "docstring": "\n Fractional part of a rational number.\n Same as `self - self.trunc()`.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::fract(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 300, "column": 8 }
        },
        {
          "name": "from_double",
          "docstring": "\n Returns the approximate rational value of a double.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::from_double(value : Double) -> <a href=\"moonbitlang/core/rational#T\">T</a>!<a href=\"moonbitlang/core/rational#RationalError\">RationalError</a>",
          "loc": { "line": 188, "column": 11 }
        },
        {
          "name": "is_integer",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::is_integer(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> Bool",
          "loc": { "line": 333, "column": 8 }
        },
        {
          "name": "neg",
          "docstring": "\n Returns the negation of a rational number.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::neg(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 119, "column": 8 }
        },
        {
          "name": "new",
          "docstring": "\n Creates a rational number.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::new(numerator : Int64, denominator : Int64) -> <a href=\"moonbitlang/core/rational#T\">T</a>?",
          "loc": { "line": 42, "column": 11 }
        },
        {
          "name": "op_add",
          "docstring": "\n NOTE: we don't check overflow here, to align with the `op_add` of `Int64`.\n TODO: add a `checked_add` method.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::op_add(self : <a href=\"moonbitlang/core/rational#T\">T</a>, other : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 69, "column": 8 }
        },
        {
          "name": "op_div",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::op_div(self : <a href=\"moonbitlang/core/rational#T\">T</a>, other : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 93, "column": 8 }
        },
        {
          "name": "op_equal",
          "docstring": "\n Equal to operator for rational numbers.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::op_equal(self : <a href=\"moonbitlang/core/rational#T\">T</a>, other : <a href=\"moonbitlang/core/rational#T\">T</a>) -> Bool",
          "loc": { "line": 131, "column": 8 }
        },
        {
          "name": "op_mul",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::op_mul(self : <a href=\"moonbitlang/core/rational#T\">T</a>, other : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 85, "column": 8 }
        },
        {
          "name": "op_sub",
          "docstring": "",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::op_sub(self : <a href=\"moonbitlang/core/rational#T\">T</a>, other : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 77, "column": 8 }
        },
        {
          "name": "reciprocal",
          "docstring": "\n Returns the reciprocal of a rational number.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::reciprocal(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
          "loc": { "line": 109, "column": 8 }
        },
        {
          "name": "to_double",
          "docstring": "\n Returns the approximate double value of a rational number.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::to_double(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> Double",
          "loc": { "line": 151, "column": 8 }
        },
        {
          "name": "trunc",
          "docstring": "\n Rounds a rational number towards zero.",
          "signature": "fn <a href=\"moonbitlang/core/rational#T\">T</a>::trunc(self : <a href=\"moonbitlang/core/rational#T\">T</a>) -> Int64",
          "loc": { "line": 289, "column": 8 }
        }
      ],
      "impls": [
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/builtin#Show\">Show</a> for <a href=\"moonbitlang/core/rational#T\">T</a>",
          "methods": [
            {
              "name": "output",
              "docstring": "",
              "signature": "fn output(self : <a href=\"moonbitlang/core/rational#T\">T</a>, logger : <a href=\"moonbitlang/core/builtin#Logger\">Logger</a>) -> Unit",
              "loc": { "line": 305, "column": 26 }
            }
          ],
          "loc": { "line": 305, "column": 1 }
        },
        {
          "docstring": "",
          "signature": "impl <a href=\"moonbitlang/core/quickcheck#Arbitrary\">@moonbitlang/core/quickcheck.Arbitrary</a> for <a href=\"moonbitlang/core/rational#T\">T</a>",
          "methods": [
            {
              "name": "arbitrary",
              "docstring": "",
              "signature": "fn arbitrary(size : Int, rs : <a href=\"moonbitlang/core/quickcheck/splitmix#RandomState\">@moonbitlang/core/quickcheck/splitmix.RandomState</a>) -> <a href=\"moonbitlang/core/rational#T\">T</a>",
              "loc": { "line": 319, "column": 43 }
            }
          ],
          "loc": { "line": 319, "column": 1 }
        }
      ]
    }
  ],
  "typealias": [],
  "values": [],
  "misc": []
}